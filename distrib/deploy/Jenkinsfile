def DEPLOY_GIT_SCOPE

pipeline {
    agent { label 'jenkins-agent1' }

    stages {
        stage('Determine git scope') {
            steps {
                script {
                    DEPLOY_GIT_SCOPE = BRANCH_NAME.tokenize('/').last().toLowerCase()
                    echo "Git branch scope: '${DEPLOY_GIT_SCOPE}'"
                }
            }
        }

        stage('Deploy to test environment') {
            when {
                not {
                    branch 'release/*'
                }
            }

            steps {
                script {
                    def namespace = 'garden-manager-test'
                    def host = 'garden-manager.test.cloud.ra-tech.pro'
                    def dbHost = 'garden-manager.db.ra-tech.pro'
                    def dbAddress = '10.8.0.10'
                    def dbPort = '9999'

                    withPythonEnv('Python-3') {
                        sh 'pip install -U jinja2-cli'

                        // main app
                        sh "jinja2 -D branch=$DEPLOY_GIT_SCOPE -D namespace=$namespace -D db_host=$dbHost -D db_port=$dbPort distrib/templates/deployment.yaml > distrib/deployment.yaml"
                        sh "jinja2 -D namespace=$namespace distrib/templates/service.yaml > distrib/service.yaml"
                        sh "jinja2 -D namespace=$namespace -D db_host=$dbHost -D db_port=$dbPort distrib/templates/network-policy.yaml > distrib/network-policy.yaml"
                        sh "jinja2 -D namespace=$namespace -D host=$host distrib/templates/ingress-gateway.yaml > distrib/ingress-gateway.yaml"
                        sh "jinja2 -D namespace=$namespace -D db_host=$dbHost -D db_port=$dbPort distrib/templates/egress-gateway.yaml > distrib/egress-gateway.yaml"
                        sh "jinja2 -D namespace=$namespace -D host=$host distrib/templates/virtual-service.yaml > distrib/virtual-service.yaml"
                        sh "jinja2 -D namespace=$namespace distrib/templates/destination-rule.yaml > distrib/destination-rule.yaml"

                        // database
                        sh "jinja2 -D namespace=$namespace -D db_host=$dbHost -D db_port=$dbPort -D db_address=$dbAddress distrib/templates/db/db-service-entry.yaml > distrib/db-service-entry.yaml"
                        sh "jinja2 -D namespace=$namespace -D db_host=$dbHost -D db_port=$dbPort -D db_address=$dbAddress distrib/templates/db/db-virtual-service.yaml > distrib/db-virtual-service.yaml"
                        sh "jinja2 -D namespace=$namespace -D db_host=$dbHost -D db_port=$dbPort distrib/templates/db/db-destination-rule.yaml > distrib/db-destination-rule.yaml"
                        sh "jinja2 -D namespace=$namespace -D db_port=$dbPort -D db_address=$dbAddress distrib/templates/db/db-service.yaml > distrib/db-service.yaml"
                    }

                    withKubeConfig([credentialsId: 'jenkins-k8s-cert', serverUrl: KUBERNETES_API_URL, namespace: namespace]) {
                        sh 'kubectl version'
                        sh "kubectl delete deployment garden-manager-core -n $namespace --ignore-not-found=true"
                        sh 'kubectl apply ' +
                                '-f distrib/network-policy.yaml ' +
                                '-f distrib/service.yaml ' +
                                '-f distrib/ingress-gateway.yaml ' +
                                '-f distrib/egress-gateway.yaml ' +
                                '-f distrib/virtual-service.yaml ' +
                                '-f distrib/destination-rule.yaml ' +
                                '-f distrib/db-service.yaml ' +
                                '-f distrib/db-service-entry.yaml ' +
                                '-f distrib/db-virtual-service.yaml ' +
                                '-f distrib/db-destination-rule.yaml ' +
                                '-f distrib/deployment.yaml'
                    }
                }
            }
        }
    }
}