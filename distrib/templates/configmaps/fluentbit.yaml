apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ namespace }}
  name: core-fluent-bit-config
  labels:
    app.kubernetes.io/component: core
    app.kubernetes.io/part-of: garden-manager
data:
  fluent-bit.conf: |
    [SERVICE]
      Parsers_File        /fluent-bit/etc/parsers.conf
      log_level           info
    
    [INPUT]
      Name              tail
      Tag               core.*
      Path              /logs/*.log
      Multiline.Parser  log4j-multiline
      DB                /fluent-bit/db/tail.db
      Mem_Buf_Limit     10MB
      Refresh_Interval  10
    
    [FILTER]
      Name              parser
      match             *
      key_name          log
      parser            log4j
      
    [OUTPUT]
      Name stdout
      Match *
    
    [OUTPUT]
      Name              http
      Match             *
      host              solr.ra-tech.pro
      port              80
      uri               /solr/garden-manager-test/update/json/docs
      format            json
      json_date_key     false
      

  parsers.conf: |
    [PARSER]
      Name          log4j
      Format        regex
      Regex         ^(?<time>[^ ]*) \[(?<level>[^ ]*)\] \[(?<thread>[^ ]*)\] (?<source>[^ ]*) - (?<message>.*)\n===== (?<exception>(.|\n)*) =====\n?$
      Time_Key      time
      Time_Format   %Y-%m-%dT%H:%M:%S,%L
      Time_Keep     On
    
    [MULTILINE_PARSER]
        name          log4j-multiline
        type          regex
        flush_timeout 1000
        #
        # Regex rules for multiline parsing
        # ---------------------------------
        #
        # configuration hints:
        #
        #  - first state always has the name: start_state
        #  - every field in the rule must be inside double quotes
        #
        # rules |   state name  | regex pattern                                      | next state
        # ------|---------------|----------------------------------------------------|------------
        rule      "start_state"   "/^([^ ]*) \[([^ ]*)\] \[([^ ]*)\] ([^ ]*) - (.*)/"  "exception"
        rule      "exception"     "/===== ((.|\n)*) =====/"                            "exception"