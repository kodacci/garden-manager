/*
 * This file is generated by jOOQ.
 */
package ru.ra_tech.garden_manager.database.schema;


import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.ra_tech.garden_manager.database.schema.tables.Databasechangeloglock;
import ru.ra_tech.garden_manager.database.schema.tables.Gardens;
import ru.ra_tech.garden_manager.database.schema.tables.GardensParticipants;
import ru.ra_tech.garden_manager.database.schema.tables.UserRoles;
import ru.ra_tech.garden_manager.database.schema.tables.Users;
import ru.ra_tech.garden_manager.database.schema.tables.records.DatabasechangeloglockRecord;
import ru.ra_tech.garden_manager.database.schema.tables.records.GardensParticipantsRecord;
import ru.ra_tech.garden_manager.database.schema.tables.records.GardensRecord;
import ru.ra_tech.garden_manager.database.schema.tables.records.UserRolesRecord;
import ru.ra_tech.garden_manager.database.schema.tables.records.UsersRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<GardensRecord> GARDENS_PKEY = Internal.createUniqueKey(Gardens.GARDENS, DSL.name("gardens_pkey"), new TableField[] { Gardens.GARDENS.ID }, true);
    public static final UniqueKey<GardensParticipantsRecord> GARDENS_PARTICIPANTS_PKEY = Internal.createUniqueKey(GardensParticipants.GARDENS_PARTICIPANTS, DSL.name("gardens_participants_pkey"), new TableField[] { GardensParticipants.GARDENS_PARTICIPANTS.ID }, true);
    public static final UniqueKey<GardensParticipantsRecord> UNIQUE_PARTICIPANT = Internal.createUniqueKey(GardensParticipants.GARDENS_PARTICIPANTS, DSL.name("unique_participant"), new TableField[] { GardensParticipants.GARDENS_PARTICIPANTS.GARDEN, GardensParticipants.GARDENS_PARTICIPANTS.PARTICIPANT }, true);
    public static final UniqueKey<UserRolesRecord> USER_ROLES_NAME_KEY = Internal.createUniqueKey(UserRoles.USER_ROLES, DSL.name("user_roles_name_key"), new TableField[] { UserRoles.USER_ROLES.NAME }, true);
    public static final UniqueKey<UserRolesRecord> USER_ROLES_PKEY = Internal.createUniqueKey(UserRoles.USER_ROLES, DSL.name("user_roles_pkey"), new TableField[] { UserRoles.USER_ROLES.ID }, true);
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_LOGIN_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_login_key"), new TableField[] { Users.USERS.LOGIN }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.ID }, true);
}
